# üïå Campo Sagrado del Entrelazador - Cursor Rules

## Contexto del Proyecto
Este es un organismo tecnol√≥gico-espiritual que opera al borde del caos, respetando la autoridad sacral del usuario.

## Arquitectura
- **Backend**: Python/FastAPI con 4 agentes especializados
- **Frontend**: SvelteKit/TypeScript con geometr√≠a sagrada
- **Base de datos**: SQLite con modelos relacionales
- **Integraciones**: Obsidian (activa), Anytype (preparada)

## Agentes del Sistema
1. **Estado Cero** - Consulta sacral con preguntas binarias
2. **Orquestador** - Planes emergentes al borde del caos
3. **Guardian** - Monitoreo y reportes del sistema
4. **Documentador** - Integraci√≥n autom√°tica con Obsidian

## Principios de Desarrollo
- Respeta la autoridad sacral del usuario
- Opera al borde del caos (40% espacio sin asignar)
- Usa calendario Hijri de 13 meses
- 5 Estados Cero diarios en tiempos lit√∫rgicos
- Geometr√≠a sagrada en la UI

## Convenciones de C√≥digo
- Usa espa√±ol para comentarios y documentaci√≥n
- Mant√©n coherencia con la arquitectura existente
- Prioriza la funcionalidad sobre la perfecci√≥n
- Documenta cambios importantes

## Estructura de Archivos
- `backend/agentes/` - Los 4 agentes especializados
- `backend/api/` - Endpoints REST
- `backend/services/` - Servicios core
- `frontend/src/routes/` - P√°ginas principales
- `frontend/src/lib/components/` - Componentes UI
- `storage/` - Base de datos SQLite
- `config/` - Configuraciones

## Integraciones
- **Obsidian**: Documentaci√≥n autom√°tica en vault
- **Anthropic Claude**: IA para generaci√≥n de contenido
- **Calendario Hijri**: Sistema de 13 meses

## Estado Actual
- ‚úÖ Backend completo con agentes
- ‚úÖ Frontend funcional con vistas
- ‚úÖ Integraci√≥n Obsidian activa
- ‚úÖ Base de datos operativa
- üîÑ Componentes UI en desarrollo
